% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions.R
\name{alphaopic}
\alias{alphaopic}
\title{Species specific a-opic calculator}
\usage{
alphaopic(spd, wl, species, opsin, lmax, pfilter)
}
\arguments{
\item{spd}{vector containing spectral power distribution in W/m2.nm}

\item{wl}{corresponding wavelength range over which measurements are acquired; assumes equally spaced spectra and uses spline extrapolation if not have 1nm spacing}

\item{species}{string containing the name of a species e.g. 'Mouse'}

\item{opsin}{target opsin name (One of the following options: 'Mel','Rod','Scone','Mcone','Lcone') or 'Photopic' human lux}

\item{lmax}{the lambda max of the opsin's photon sensitivity in the absence of preceptoral filtering. A string specifying a species specific work space in the subdirectory '/data' e.g. 'Mouse', or a numerical wavelength value specifying the lambda max to allow modelling}

\item{pfilter}{information about function for prereceptoral filtering. A string specifying a species specific work space in the subdirectory '/data' e.g. 'Mouse', zero for no prereceptoral filtering, or new transmission measurement data matrix with transmissions and wavelengths}
}
\value{
list of species name, target opsin, EDI = a-opic equivalent daylight illuminance (in lux), IRR = a-opic irradiance (W/m2), PHO = Effective photon [log10(photons/cm2.s)]
}
\description{
Calculate species specific a-opic EDIs (+ photopic illuminance), irradiances and effective photons from predefined species specific parameters
}
\examples{
#Wavelength range
wl = 300:780
#Spectral power distribution in W/m2.nm
spd = dnorm(300:780, mean = 480, sd = 30)

#If target species is available in the package data
exposure1 <- alphaopic(spd, wl, 'Mouse', 'Scone', 'Mouse', 'Mouse');

#If lambda max value of opsin's photon sensitivity will be used
exposure2 <- alphaopic(spd, wl, 'Cat', 'Mel', 480, 'Cat');

#If new lens transmission observations will be used
exposure3 <- alphaopic(spd, wl, 'Sheep', 'Rod', 500, data.frame(wavelen = 350:750, trans = seq(0,100,length.out=401)));
}
